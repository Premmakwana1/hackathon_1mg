[python-versions]
required = "3.11.9"

[tool.black]
line-length = 120
target-version = ['py39']
include = "^.*\\.py$"
exclude = '^venv/'

[tool.isort]
line_length=120
multi_line_output=3
include_trailing_comma=true
force_grid_wrap=0
use_parentheses=true
profile="black"


[tool.pylint.'MASTER']
ignore = 'tests'
extension-pkg-whitelist = "ujson, pydantic"
disable="C0114,R0903,R0902,R0913,R0914,W0511,R0901,E0213,E0401,E203,C0115,W0212,C0116,C0305,W0703,C0301,R1705,E0402"

[tool.mypy]
python_version = 3.11
ignore_missing_imports = true
exclude = 'tests'
#check_untyped_defs = true
#disallow_any_generics = true
#disallow_untyped_defs = true
#no_implicit_optional = true
#warn_redundant_casts = true
#warn_unused_ignores = true
#warn_return_any = true
#implicit_reexport = false
#strict_equality = true
disable_error_code = "misc,union-attr"

[tool.bandit]
exclude_dirs = ["tests"]

[tool.pytest.ini_options]
addopts = "-p no:warnings"

[tool.poetry.group.test.dependencies]
pytest = "7.1.3"
pytest-cov = "4.0.0"
pytest-sanic = {git = "https://github.com/dollardhingra/pytest-sanic.git", branch = "fix_sanic_after_22_12"}

[tool.poetry]
name = "1mg_vitality_service"
version = "0.1.0"
description = ""
authors = ["Abhinav Mahajan <abhinav.mahajan1@1mg.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
torpedo = {git = "ssh://git@bitbucket.org/tata1mg/torpedo.git", develop = true, rev = "4.2.2"}
commonutils = {git = "ssh://git@bitbucket.org/tata1mg/commonutils.git", develop = true, rev = "1.8.4"}
mongoose = {git = "ssh://git@bitbucket.org/tata1mg/mongoose", develop = true, rev = "4.0.0-patch3" }
cache_wrapper = {git = "ssh://git@bitbucket.org/tata1mg/cache_wrapper.git", develop = true, rev = "4.0.0"}
snowflake-connector-python = "3.2.0"
ipython = "==8.14.0"
pymongo-migrate = "1.0.0"


[tool.poetry.group.dev.dependencies]
faker = "23.1.0"
black = "24.1.1"
flake8 = "7.0.0"
isort = "5.13.2"
pre-commit = "3.6.0"
mongomock-motor = "0.0.34"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"